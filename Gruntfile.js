/*
 * assemble-bootstrap
 * http://github.com/assemble/assemble-bootstrap
 *
 * Copyright (c) 2013 Jon Schlinkert
 * MIT License
 */
"use strict";

module.exports = function(grunt) {

  var pretty = require('pretty');
  var vendor = grunt.file.readJSON('.bowerrc').directory;
  if(!grunt.file.exists(vendor + '/bootstrap/_config.yml')) {
    grunt.fail.fatal('>> Please run "bower install" before continuing.');
  }

  // Project configuration.
  grunt.initConfig({

    // Project metadata
    pkg   : grunt.file.readJSON('package.json'),
    site  : grunt.file.readYAML('.assemblerc.yml'),
    vendor: vendor,

    // Run Bootstrap's own Gruntfile.
    subgrunt: {
      test: {
        options: {task: 'test'},
        src: ['vendor/bootstrap']
      },
      js: {
        options: {task: 'concat'},
        src: ['vendor/bootstrap']
      },
      css: {
        options: {task: 'less'},
        src: ['vendor/bootstrap']
      },
      dist: {
        options: {task: 'dist'},
        src: ['vendor/bootstrap']
      },
      all: {
        options: {task: 'default'},
        src: ['vendor/bootstrap']
      }
    },

    assemble: {
      options: {
        flatten: true,
        assets: '<%= site.assets %>',
        data: 'templates/_data/*.{json,yml}',

        // Metadata
        site: '<%= site %>',

        // Templates
        partials: 'templates/_includes/*.hbs',
        layoutdir: 'templates/layouts',
        layout: 'default.hbs',
      },
      site: {
        src: ['templates/*.hbs'],
        dest: '_gh_pages/'
      }
    },

    bootstrap: {
      convert: {
        files: [{
          expand: true,
          filter: 'isFile',
          cwd: 'vendor/bootstrap/docs',
          src: ['**/*.html'],
          dest: 'templates/',
          ext: '.hbs'
        }]
      }
    },

    // Compile LESS to CSS
    less: {
      options: {
        paths: [
          'theme',
          'theme/bootstrap',
          'theme/components',
          'theme/utils'
        ],
      },
      site: {
        src: ['theme/site.less'],
        dest: '_gh_pages/assetscss/site.css'
      }
    },

    copy: {
      vendor: {
        files: {
          '_gh_pages/assetsjs/highlight.js': ['vendor/highlightjs/highlight.pack.js'],
          '_gh_pages/assetscss/github.css':  ['vendor/highlightjs/styles/github.css']
        }
      },
      assets: {
        files: [
          {expand: true, cwd: 'vendor/bootstrap/examples', src: ['**/*.css', '**/*.{jpg,png,gif}'], dest: '_gh_pages/examples/'},
          {expand: true, cwd: 'vendor/bootstrap/docs-assets', src: ['**'], dest: '_gh_pages/assets'},
          {expand: true, cwd: 'vendor/bootstrap/_data', src: ['**'], dest: 'templates/_data/'},
          {expand: true, cwd: 'vendor/bootstrap/dist', src: ['**'], dest: '_gh_pages/assets'},
        ]
      },
      update: {
        files: [
          {expand: true, cwd: 'vendor/bootstrap/less', src: ['*', '!{var*,mix*,util*}'], dest: 'theme/bootstrap/'},
          {expand: true, cwd: 'vendor/bootstrap/less', src: ['{util*,mix*}.less'], dest: 'theme/utils'},
          {expand: true, cwd: 'vendor/bootstrap/less', src: ['variables.less'], dest: 'theme/'},
        ]
      }
    },

    clean: {
      dist: ['_gh_pages/**/*', '!_gh_pages/.{git,gitignore}'],
      update: ['theme/bootstrap/{var*,mix*,util*}.less']
    }
  });

// console.log(grunt)

  grunt.config.set('site.description', 'Generated by http://assemble.io');

  // These plugins provide necessary tasks.
  grunt.loadNpmTasks('assemble');
  grunt.loadNpmTasks('assemble-less');
  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-contrib-copy');
  grunt.loadNpmTasks('grunt-verb');

  // Load local "Subgrunt" task to run Bootstrap's Gruntfile.
  grunt.loadTasks('tasks');

  // Tests task.
  grunt.registerTask('test', ['subgrunt:test']);

  grunt.registerTask('dev', ['clean', 'bootstrap', 'assemble']);

  grunt.registerTask('update', ['copy:update', 'clean:update']);

  // Default task to be run with the "grunt" command.
  grunt.registerTask('default', [
    'clean',
    'subgrunt:js',
    'subgrunt:css',
    'copy',
    'bootstrap',
    'assemble',
    'less',
    'sync'
  ]);
};
